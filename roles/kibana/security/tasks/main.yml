---
# tasks file for security


- name: elastic_pw
  delegate_to: localhost
  set_fact:
    pw: "{{ lookup('file', '{{ local_install_dir }}/{{ es_clustername }}-security') }}"
  when: es_security == true  
  tags:
    - security

- debug: msg="the value of pw is {{ pw }}"
  when: es_security == true  
  tags:
    - security

- name: elastic_pw
  delegate_to: localhost
  set_fact:
#    kibana: "{{ 'server1/database42'  | regex_search('server([0-9]+)/database([0-9]+)', '\\1', '\\2') }}"
    pw: "{{ pw | string   }}"
  when: es_security == true  
  tags:
    - security

- debug: msg="the value of pw is {{ pw }}"
  when: es_security == true  
  tags:
    - security

- name: elastic_pw
  delegate_to: localhost
  set_fact:
#    kibana: "{{ 'PASSWORD kibana_system = gndlttvbgjj3L3ncX1ti PASSWORD kibana = gndlttvbgjj3L3ncX1ti'  |  regex_search('kibana_system = ([a-zA-Z0-9]*)', '\\1') }}"
    kibana: "{{ pw  | regex_search('kibana_system = ([a-zA-Z0-9]*)', '\\1') | first}}"
  when: es_security == true  
  tags:
    - security

- debug: msg="the value of kibana is {{ kibana }}"
  when: es_security == true  
  tags:
    - security

- name: list  keystore
  shell: 
    cmd: bin/kibana-keystore list
    chdir: /usr/share/kibana
  register: keystore
  when: es_security == true
  tags:
    - security

- debug: var=keystore.stdout_lines
  when: es_security == true
  tags:
    - security

- name: Check for pki dir
  stat: path="/etc/kibana/kibana.keystore"
  register: p
  tags:
    - security


- name: Create keystore if not exist
  shell: 
    cmd: bin/kibana-keystore create
    chdir: /usr/share/kibana
  when: es_security == true and not p.stat.exists
  tags:
    - security

- name: Update elasticsearch.password in keystore
  shell: 
    cmd: echo "{{kibana}}"| bin/kibana-keystore add elasticsearch.password
    chdir: /usr/share/kibana
  when: es_security == true and '"elasticsearch.password" not in keystore.stdout_lines'
  tags:
    - security

