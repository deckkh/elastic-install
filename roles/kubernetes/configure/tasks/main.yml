---
# tasks file for configure


- name: create kubernetes directory 
  delegate_to: localhost
  file:
    path: "{{ item}}"
    state: directory
  with_items:
    - "{{ local_install_dir}}/kubernetes"
    - "{{ local_install_dir}}/kubernetes/{{ k8_cluster_name }}"
  tags:
    - configure

- name: kubeadm init
  block:

  - name: Configure kubeadm init
    template:
      src: "kubeadminit.yml.j2"
      dest: "/tmp/kubeadminit.yml"
    when: k8_role_master == true
    tags:
      - configure

  - name: run kubeadm
    shell: 
      cmd: "kubeadm init --config /tmp/kubeadminit.yml"
    register: kubeadminit
    tags:
      - configure

  - name: save kubeadmini facts to host specific file
    copy:
      content: "{{ kubeadminit.stdout_lines }}"
      dest: "/tmp/kubeadminit"
    tags:
      - configure

  - name: Fetch kubeadminit
    ansible.builtin.fetch:
      src: "/tmp/kubeadminit"
      dest: "{{ local_install_dir }}/kubernetes/{{ k8_cluster_name}}/kubeadminit"
      flat: true
    tags:
      - configure

  - name: remove kubeadminit
    file:
      path: "/tmp/kubeadminit"
      state: absent
    tags:
      - configure

  # home dir of a user ???
  - name: create kubernetes directory 
    file:
      path: "/root/.kube"
      state: directory
    tags:
      - configure

  - name: Copy admin.conf into folder 
    copy:
      remote_src: yes
      src: "/etc/kubernetes/admin.conf"
      dest: "/root/.kube/config"
      owner: root
      group: root
    tags:
      - configure

  - name: install flannel
    shell: 
      cmd: "kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml"
    when: k8_podnet_flannel == true
    tags:
      - configure

  when: k8_role_master == true


- name: kubeadm join
  block:

  - name: join_param
    delegate_to: localhost
    set_fact:
      join: "{{ lookup('file', '{{ local_install_dir }}/kubernetes/{{ k8_cluster_name}}/kubeadminit') }}"
    tags:
      - configure
      - worker

  - name: join_command
    delegate_to: localhost
    set_fact:
      join_cmd: "{{ join |string | regex_search('kubeadm join ([0-9\\.\\:]*) --token ([a-z0-9\\.]*) .+sha256:([a-z0-9]*) , '\\1')  }}"
    tags:
      - configure
      - worker

  - debug: msg="the value of join is {{ join_cmd }}"
    tags:
      - configure
      - worker

  #  - name: run kubeadm join
  #    shell: 
  #      cmd: "kubeadm join 192.168.0.47:6443 --token nu06lu.xrsux0ss0ixtnms5 â€“discovery token-ca-cert-hash sha256:f996ea35r4353d342fdea2997a1cf8caeddafd6d4360d606dbc82314683478hjmf7"
  #    tags:
  #      - configure
  #      - worker


  when: k8_role_worker == true
