---
# tasks file for install

- name: Ensure group {{ ka_group}} exists
  group:
    name: "{{ ka_group}}"
    state: present
  tags:
    - install

- name: Add the user {{ ka_user}}
  user:
    name: "{{ ka_user}}"
    comment: kafka service user
    group: "{{ ka_group}}"
    shell: "/usr/sbin/nologin"
  tags:
    - install


- name: create data directory
  file:
    path: "{{ ka_data_path}}"
    state: directory
    owner: "{{ ka_user }}"
    group: "{{ ka_group }}"
  tags:
    - install


- name: create kafka home directory
  file:
    path: "{{ ka_home}}"
    state: directory
    owner: "{{ ka_user}}"
    group: "{{ ka_group}}"
  tags:
    - install

- name: create kafka conf directory
  file:
    path: "{{ ka_conf}}"
    state: directory
    owner: "{{ ka_user}}"
    group: "{{ ka_group}}"
  tags:
    - install

- name: Check for kafka dir
  stat: path="{{ ka_home}}/kafka_{{ scala_version}}-{{ kafka_version }}"
  register: kafka_dir
  tags:
    - install

- name: Extract kafka into {{ ka_home}}
  unarchive:
    src: "{{ local_install_dir}}/kafka_{{ scala_version}}-{{ kafka_version }}.tgz"
    dest: "{{ ka_home}}"
    owner: "{{ ka_user}}"
    group: "{{ ka_group}}"
  when: not kafka_dir.stat.exists
  tags:
    - install



- name: Create a symbolic link
  file:
    src: "{{ ka_home}}/kafka_{{ scala_version}}-{{ kafka_version }}"
    dest: "{{ ka_home}}/bin"
    owner: "{{ ka_user}}"
    group: "{{ ka_group}}"
    state: link
  tags:
    - install


- name: Populate service facts
  service_facts:    
  tags:
    - install  

- name: stop service 
  service: 
    name: "kafka"
    state: stopped 
  when: ansible_facts.services["kafka.service"] is defined    
  tags:
    - install  

- name: Configure kafka.service
  template:
    src: "kafka.service.j2"
    dest: "/etc/systemd/system/kafka.service"
  tags:
    - install

- name: issue daemon-reload to pick up config changes
  systemd:
    daemon_reload: yes
  tags:
    - install  


